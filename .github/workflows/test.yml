# test.yml
#
# Copyright (C) 2022 ViliusSutkus89.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

name: test
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/test.yml'

permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

env:
  applicationId: com.viliussutkus89.adb.pull.as

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - uses: android-actions/setup-android@v2

      - id: decodeKeystore
        run: |
          echo "${{ env.APP_SIGNING_KEYFILE_BASE64 }}" | base64 --decode - > "$HOME/TestApplication/$applicationId.jks"
          echo "::set-output name=APP_SIGNING_KEYFILE::$HOME/TestApplication/$applicationId.jks"
        env:
          SIGNING_KEYFILE_BASE64: ${{ secrets.APP_SIGNING_KEYFILE_BASE64 }}

      - run: ./gradlew assembleRelease
        working-directory: TestApplication
        env:
          APP_SIGNING_KEYFILE: ${{ steps.decodeKeystore.outputs.APP_SIGNING_KEYFILE }}
          APP_SIGNING_PASS: ${{ secrets.APP_SIGNING_PASS }}
          APP_SIGNING_ALIAS: ${{ secrets.APP_SIGNING_ALIAS }}

      - run: ls -lhR TestApplication/app/build/outputs/apk/release/

      - uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: TestApplication/app/build/outputs/apk/release/app-release.apk
          if-no-files-found: error

  test:
    needs: build
    # Only macos VMs are available with exposed CPU extensions to run hardware accelerated emulator
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            api-level: 16
            api-type-target: default
          - arch: x86
            api-level: 17
            api-type-target: default
          - arch: x86
            api-level: 18
            api-type-target: default
          - arch: x86
            api-level: 19
            api-type-target: default
          - arch: x86
            api-level: 21
            api-type-target: default
          - arch: x86
            api-level: 22
            api-type-target: default
          - arch: x86
            api-level: 23
            api-type-target: default
          - arch: x86
            api-level: 24
            api-type-target: default
          - arch: x86
            api-level: 25
            api-type-target: default
          - arch: x86
            api-level: 26
            api-type-target: default
          - arch: x86
            api-level: 27
            api-type-target: default
          - arch: x86
            api-level: 28
            api-type-target: default
          - arch: x86
            api-level: 29
            api-type-target: default
          - arch: x86
            api-level: 30
            api-type-target: aosp_atd
          - arch: x86_64
            api-level: 31
            api-type-target: default
          - arch: x86_64
            api-level: 32
            api-type-target: google_apis
          - arch: x86_64
            api-level: 33
            api-type-target: google_apis
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-release.apk

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.api-type-target }}
          sdcard-path-or-size: 1G
          disk-size: 8G
          script: |
            mkdir -p testResults
            adb logcat -c || true
            adb logcat > testResults/logcat.txt &
            adb install app/build/outputs/apk/release/app-release.apk
            adb shell am start -W $PACKAGE/$PACKAGE.MainActivity
            ../adbPullAs.py $PACKAGE /data/data/$PACKAGE testResults
            test -f testResults/cache/activityScreenshot.png

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: testResults-${{ matrix.api-level }}-${{ matrix.arch }}-${{ matrix.api-type-target }}
          path: testResults
          if-no-files-found: error
